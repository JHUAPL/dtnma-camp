/****************************************************************************
 **
 ** File Name: adm_test_adm_impl.c
 **
 ** Description: TODO
 **
 ** Notes: TODO
 **
 ** Assumptions: TODO
 **
 ** Modification History:
 **  YYYY-MM-DD  AUTHOR           DESCRIPTION
 **  ----------  --------------   --------------------------------------------
 **  {{datestamp}}  AUTO             Auto-generated c file
 **
 ****************************************************************************/

/*   START CUSTOM INCLUDES HERE  */
/*             TODO              */
/*   STOP CUSTOM INCLUDES HERE  */


#include "shared/adm/adm.h"
#include "adm_test_adm_impl.h"

/*   START CUSTOM FUNCTIONS HERE */
/*             TODO              */
/*   STOP CUSTOM FUNCTIONS HERE  */

void test_ns_setup()
{

	/*
	 * +-------------------------------------------------------------------------+
	 * |START CUSTOM FUNCTION setup BODY
	 * +-------------------------------------------------------------------------+
	 */
	/*
	 * +-------------------------------------------------------------------------+
	 * |STOP CUSTOM FUNCTION setup BODY
	 * +-------------------------------------------------------------------------+
	 */
}

void test_ns_cleanup()
{

	/*
	 * +-------------------------------------------------------------------------+
	 * |START CUSTOM FUNCTION cleanup BODY
	 * +-------------------------------------------------------------------------+
	 */
	/*
	 * +-------------------------------------------------------------------------+
	 * |STOP CUSTOM FUNCTION cleanup BODY
	 * +-------------------------------------------------------------------------+
	 */
}


/* Metadata Functions */


tnv_t *test_ns_meta_name(tnvc_t *parms)
{
	return tnv_from_str("test_adm");
}


tnv_t *test_ns_meta_namespace(tnvc_t *parms)
{
	return tnv_from_str("test_ns");
}


tnv_t *test_ns_meta_version(tnvc_t *parms)
{
	return tnv_from_str("v0");
}


tnv_t *test_ns_meta_organization(tnvc_t *parms)
{
	return tnv_from_str("JHUAPL");
}


tnv_t *test_ns_meta_enum(tnvc_t *parms)
{
	return tnv_from_str("9999");
}


/* Constant Functions */
tnv_t *test_ns_get_amp_epoch(tnvc_t *parms)
{
	return tnv_from_uvast(1504915200);
}

/* Table Functions */


/*
 * This table lists the ARI for every variable that is known to the agent.
 */
tbl_t *test_ns_tblt_variables(ari_t *id)
{
	tbl_t *table = NULL;
	if((table = tbl_create(id)) == NULL)
	{
		return NULL;
	}

	/*
	 * +-------------------------------------------------------------------------+
	 * |START CUSTOM FUNCTION tblt_variables BODY
	 * +-------------------------------------------------------------------------+
	 */
	/*
	 * +-------------------------------------------------------------------------+
	 * |STOP CUSTOM FUNCTION tblt_variables BODY
	 * +-------------------------------------------------------------------------+
	 */
	return table;
}


/*
 * This table lists the ARI for every report template that is known to the agent.
 */
tbl_t *test_ns_tblt_rptts(ari_t *id)
{
	tbl_t *table = NULL;
	if((table = tbl_create(id)) == NULL)
	{
		return NULL;
	}

	/*
	 * +-------------------------------------------------------------------------+
	 * |START CUSTOM FUNCTION tblt_rptts BODY
	 * +-------------------------------------------------------------------------+
	 */
	/*
	 * +-------------------------------------------------------------------------+
	 * |STOP CUSTOM FUNCTION tblt_rptts BODY
	 * +-------------------------------------------------------------------------+
	 */
	return table;
}


/* Collect Functions */
/*
 * This is the number of report templates known to the Agent.
 */
tnv_t *test_ns_get_edd_uint(tnvc_t *parms)
{
	tnv_t *result = NULL;
	/*
	 * +-------------------------------------------------------------------------+
	 * |START CUSTOM FUNCTION get_edd_uint BODY
	 * +-------------------------------------------------------------------------+
	 */
	/*
	 * +-------------------------------------------------------------------------+
	 * |STOP CUSTOM FUNCTION get_edd_uint BODY
	 * +-------------------------------------------------------------------------+
	 */
	return result;
}


/*
 * This is the number of report templates known to the Agent.
 */
tnv_t *test_ns_get_uint_with_param(tnvc_t *parms)
{
	tnv_t *result = NULL;
	/*
	 * +-------------------------------------------------------------------------+
	 * |START CUSTOM FUNCTION get_uint_with_param BODY
	 * +-------------------------------------------------------------------------+
	 */
	/*
	 * +-------------------------------------------------------------------------+
	 * |STOP CUSTOM FUNCTION get_uint_with_param BODY
	 * +-------------------------------------------------------------------------+
	 */
	return result;
}


/*
 * This is the current system time.
 */
tnv_t *test_ns_get_edd_tv(tnvc_t *parms)
{
	tnv_t *result = NULL;
	/*
	 * +-------------------------------------------------------------------------+
	 * |START CUSTOM FUNCTION get_edd_tv BODY
	 * +-------------------------------------------------------------------------+
	 */
	/*
	 * +-------------------------------------------------------------------------+
	 * |STOP CUSTOM FUNCTION get_edd_tv BODY
	 * +-------------------------------------------------------------------------+
	 */
	return result;
}


/*
 * is the given endpoint active? (0=no)
 */
tnv_t *test_ns_get_endpoint_active(tnvc_t *parms)
{
	tnv_t *result = NULL;
	/*
	 * +-------------------------------------------------------------------------+
	 * |START CUSTOM FUNCTION get_endpoint_active BODY
	 * +-------------------------------------------------------------------------+
	 */
	/*
	 * +-------------------------------------------------------------------------+
	 * |STOP CUSTOM FUNCTION get_endpoint_active BODY
	 * +-------------------------------------------------------------------------+
	 */
	return result;
}



/* Control Functions */

/*
 * This control configures a new variable definition on the Agent.
 */
tnv_t *test_ns_ctrl_add_var(eid_t *def_mgr, tnvc_t *parms, int8_t *status)
{
	tnv_t *result = NULL;
	*status = CTRL_FAILURE;
	/*
	 * +-------------------------------------------------------------------------+
	 * |START CUSTOM FUNCTION ctrl_add_var BODY
	 * +-------------------------------------------------------------------------+
	 */
	/*
	 * +-------------------------------------------------------------------------+
	 * |STOP CUSTOM FUNCTION ctrl_add_var BODY
	 * +-------------------------------------------------------------------------+
	 */
	return result;
}



/* OP Functions */

/*
 * Int32 addition
 */
tnv_t *test_ns_op_plusint(vector_t *stack)
{
	tnv_t *result = NULL;
	/*
	 * +-------------------------------------------------------------------------+
	 * |START CUSTOM FUNCTION op_plusint BODY
	 * +-------------------------------------------------------------------------+
	 */
	/*
	 * +-------------------------------------------------------------------------+
	 * |STOP CUSTOM FUNCTION op_plusint BODY
	 * +-------------------------------------------------------------------------+
	 */
	return result;
}


/*
 * Real64 addition
 */
tnv_t *test_ns_op_plusreal64(vector_t *stack)
{
	tnv_t *result = NULL;
	/*
	 * +-------------------------------------------------------------------------+
	 * |START CUSTOM FUNCTION op_plusreal64 BODY
	 * +-------------------------------------------------------------------------+
	 */
	/*
	 * +-------------------------------------------------------------------------+
	 * |STOP CUSTOM FUNCTION op_plusreal64 BODY
	 * +-------------------------------------------------------------------------+
	 */
	return result;
}

